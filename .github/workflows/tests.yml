name: Run Tests

on: 
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  unittest-and-lint:

    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        # restrict matrix to the latest Python version and one older version
        python-version: ["3.8", "3.11"]

        # due to the slow windows runners, we refrain from testing every python
        # version on windows-latest
        exclude:
          - os: windows-latest
            python-version: "3.8"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}

      - name: Install odxtools dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # we need additional dependencies for testing and the type checker
      # but we avoided to specify as hard dependencies within 'requirements.txt'
      - name: Install test dependencies
        run:  |
          pip install -r test-requirements.txt

      - name: Create somersault.pdx
        run: |
          python -m examples.mksomersaultpdx examples/somersault.pdx

      - name: Run unit tests and report line coverage
        # use `python -m pytest ...` instead of `pytest ...` to avoid setting the
        # PYTHONPATH environment variable. This works independently of the OS.

        # For some reason, pytest-cov reports invalid line coverage. As a remedy,
        # we utilize the `coverage` module instead of `pytest-cov`. Line coverage
        # shall be only reported for the odxtools package, i.e., the tests package
        # should be ignored.
        run: |
          coverage run --source=odxtools --omit=tests -m pytest
          coverage report
      
      - name: Static type checking with mypy
        run: |
          python -m mypy --ignore-missing-imports odxtools examples
